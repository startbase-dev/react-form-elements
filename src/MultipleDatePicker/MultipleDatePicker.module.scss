.root {
  margin-bottom: var(--rfe-spacing);
  position: relative;
}

.inputRoot {
  position: relative;
}

.calendar {
  margin: var(--rfe-label-spacing) 0 !important;
}

.label {
  line-height: 1;
  font-size: var(--rfe-font-size);
  color: var(--rfe-color);
  margin-bottom: 0;
  position: absolute;
  left: 16px;
  top: -2px;
  cursor: text;
  transform: translateY(calc((var(--rfe-input-height) - 14px) / 2));
  transition: all 250ms;
}

.label.disableShrink {
  display: block;
  position: static;
  margin-bottom: var(--rfe-label-spacing);
  color: var(--rfe-color);
  transform: none;
}

.disabledLabel {
  pointer-events: none;
  cursor: not-allowed;
}

.labelPlaceholder {
  font-size: var(--rfe-focused-font-size);
  transform: translateY(9px);
  top: 0;
}

.labelFocused {
  font-size: var(--rfe-focused-font-size);
  transform: translateY(9px);
  top: 0;
}

.input {
  width: 100%;
  line-height: 24px;
  background-color: var(--rfe-background) !important;
  border: 1px solid var(--rfe-border) !important;
  border-radius: var(--rfe-border-radius);
  min-height: var(--rfe-input-height) !important;
  transition: all 250ms !important;
  font-family: var(--rfe-font-family);

  &:hover {
    border: 1px solid var(--rfe-border);
  }
}

.focus {
  box-shadow: var(--rfe-focus) !important;
}

.notFocus {
  box-shadow: none !important;
}

.inputError {
  border-color: var(--rfe-color-error) !important;
}

.input:-webkit-autofill:not(.disableShrink) ~ .label,
.input:focus:not(.disableShrink) ~ .label,
.input:not([value=''], .disableShrink) ~ .label {
  font-size: var(--rfe-focused-font-size);
  transform: translateY(9px);
}

.input.disableShrink {
  padding: 16px;
}

.errorLabel {
  color: var(--rfe-color-error);
  font-size: var(--rfe-error-font-size);
  margin-top: var(--rfe-label-spacing);
  pointer-events: none;
}

.disabled {
  background: var(--rfe-background-disabled) !important;
  color: var(--rfe-color) !important;
  cursor: not-allowed !important;
  pointer-events: all;
}

.innerInput {
  margin-left: 8px !important;
  color: var(--rfe-color) !important;
}

.control {
  align-items: flex-end !important;
}

.menu {
  background-color: var(--rfe-background) !important;
  border: 1px solid var(--rfe-border);
  border-radius: var(--rfe-border-radius);
  padding: 0 !important;
  margin: 6px 0 0 !important;
  z-index: 9999;
}

.option {
  color: var(--rfe-color) !important;

  &:hover,
  &:focus,
  &:active,
  &:focus-visible,
  &:focus-within {
    background-color: var(--rfe-background-selected) !important;
  }
}

.optionFocused {
  color: var(--rfe-color) !important;
  background-color: var(--rfe-background-selected) !important;
}

.singleValue {
  color: var(--rfe-color) !important;
  margin-left: 8px !important;
}

.placeholder {
  color: var(--rfe-color-placeholder) !important;
  font-size: var(--rfe-placeholder-font-size);
  margin-left: 8px !important;
}

.indicatorsContainer {
  min-width: 36px;
  display: flex;
  justify-content: center;
}

.indicatorSeparator {
  display: none;
}

.indicatorsContainer,
.clearIndicator,
.multiValueRemove {
  & svg {
    color: var(--rfe-color);
    pointer-events: all;
    cursor: pointer;
  }
}

.multiValue {
  height: 24px;
  border-radius: var(--rfe-border-radius) !important;
  background-color: var(--rfe-background-selected) !important;
  align-items: center;

  & div {
    color: var(--rfe-color) !important;
  }
}

.multiValueRemove {
  color: var(--rfe-color) !important;

  &:hover {
    background: unset !important;
  }
}

.valueContainer {
  padding-top: 20px !important;
}

.popper {
  z-index: 1000;
}

.icon {
  background: none;
  border: 0;
  margin: 0;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: all;
  cursor: pointer;
}
