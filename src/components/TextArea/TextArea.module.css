.inputContainer {
  position: relative;
  margin-bottom: 16px;
  box-sizing: border-box;
}

.label {
  font-size: var(--rfe-font-size);
  line-height: 1;
  color: var(--rfe-color);
  margin-bottom: 0;
  position: absolute;
  top: -2px;
  left: 16px;
  cursor: text;
  transform: translateY(calc((var(--rfe-input-height) - 14px) / 2));
  transition: all 250ms;
}

.inputContainer.focusedContainer .label {
  font-size: 12px;
  transform: translateY(9px);
}

.inputContainer .innerContainer {
  display: flex;
  flex-direction: column;
}

.inputContainer .innerWrapper {
  display: flex;
  flex-direction: column;
  transition: all 250ms;
  border-radius: var(--rfe-border-radius);
}

.inputContainer .innerWrapper .input {
  background-color: var(--rfe-background);
  resize: none;
  color: var(--rfe-color);
  padding: 7px 16px;
  font-size: 14px;
  width: 100%;
  line-height: 24px;
  border-radius: var(--rfe-border-radius);
  border: 1px solid var(--rfe-border);
  transition: all 250ms;
  font-family: var(--rfe-font-family);
}

.inputContainer .innerWrapper .input.withLabel {
  padding-top: 25px;
  padding-bottom: 0;
}

.inputContainer .innerWrapper .input:focus {
  transition: all 250ms;
  box-shadow: var(--rfe-focus);
}

.errorLabel {
  color: var(--rfe-color-error);
  font-size: var(--rfe-error-font-size);
  margin-top: var(--rfe-label-spacing);
}

.disabled {
  background-color: var(--rfe-background-disabled) !important;
  color: var(--rfe-color) !important;
  cursor: not-allowed !important;
}

.disableShrink {
  display: block;
  position: static !important;
  font-size: var(--rfe-font-size) !important;
  color: var(--rfe-color);
  transform: none;
  background: none !important;
  margin-bottom: var(--rfe-label-spacing);
}

.disableShrinkInput {
  padding-top: 10px !important;
  padding-bottom: 0 !important;
}

.input::placeholder {
  font-size: var(--rfe-font-size);
  color: var(--rfe-color-placeholder);
}

.labelPlaceholder {
  font-size: 12px;
  transform: translateY(9px);
}
